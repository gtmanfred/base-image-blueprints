%pre --log=/tmp/log
#!/bin/bash
dd if=/dev/zero of=/dev/xvda bs=512 count=1
parted -s /dev/xvda mklabel msdos
partprobe
%end

# Install, not upgrade
install
#cmdline

# Install from a friendly mirror and add updates
url --url=http://mirror.rackspace.com/fedora/releases/25/Server/x86_64/os/
repo --name=fedora --baseurl=http://mirror.rackspace.com/fedora/releases/25/Everything/x86_64/os/
repo --name=updates --baseurl=http://mirror.rackspace.com/fedora/updates/25/x86_64/

# Language and keyboard setup
lang en_US.UTF-8
keyboard us

# Configure DHCP networking w/optional IPv6, firewall on
network --onboot yes --bootproto dhcp --ipv6 auto --hostname localhost --device ens3 
firewall --service=ssh

# Set timezone
timezone --utc Etc/UTC

# Authentication
## we later delete the root password and lock the root account, but we must
## set a password here for the installer. generated randomly:
##   pwgen -s 28 1 | openssl passwd -1 -stdin
rootpw --iscrypted $1$9r4wCXzD$4kw.9x.rBQHff4i/RSmXC0
authconfig --enableshadow --passalgo=sha512

# SELinux
selinux --permissive

# Services running at boot
services --enabled sshd,chronyd

# Disable anything graphical
skipx
text

# Setup the disk
zerombr
clearpart --all --initlabel
part / --fstype=ext4 --grow --size=1024 --asprimary
bootloader --timeout=1 --append="root=LABEL=root console=ttyS0,57600n8 8250.nr_uarts=5 modprobe.blacklist=mei_me net.ifnames=0 biosdevname=0 rd.auto"

# Shutdown when the kickstart is done
shutdown --eject

# Minimal package set
%packages
@core
authconfig
kernel
grubby
cloud-utils
firewalld
chrony
rsync
tar
wget
curl
rsyslog
which
-dracut-config-rescue
-plymouth
-NetworkManager
-iprutils
mdadm
pyserial
python-configobj
python-jinja2
python-jsonpatch
python-oauth
python-prettytable
net-tools
#cloud-init
python3-dnf-plugins-extras-versionlock
%end

%post --erroronfail
exec < /dev/tty3 > /dev/tty3
chvt 3
echo
echo "################################"
echo "# Running Post Configuration   #"
echo "################################"
(
# set bootable

# update all
dnf -y update

parted -s /dev/sda set 1 boot on
e2label /dev/sda1 root

# tmp tmp
mkdir /tmp/tmp
cd /tmp/tmp

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# fix dns
echo "dns=none" >> /etc/NetworkManager/NetworkManager.conf

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
echo -n > /etc/udev/rules.d/70-persistent-net.rules
ln -s /dev/null /etc/udev/rules.d/75-persistent-net-generator.rules

mkdir /etc/systemd/network
cat > /etc/systemd/network/10-pci-0300.link <<'EOF'
[Match]
Path=pci-0000:03:00.0-*

[Link]
Name=eth0
EOF
cat > /etc/systemd/network/10-pci-0301.link <<'EOF'
[Match]
Path=pci-0000:03:00.1-*

[Link]
Name=eth1
EOF

cat > /etc/systemd/network/10-pci-0200.link <<'EOF'
[Match]
Path=pci-0000:02:00.0-*

[Link]
Name=eth0
EOF
cat > /etc/systemd/network/10-pci-0201.link <<'EOF'
[Match]
Path=pci-0000:02:00.1-*

[Link]
Name=eth1
EOF
cat > /etc/systemd/network/10-pci-0800.link <<'EOF'
[Match]
Path=pci-0000:08:00.0-*

[Link]
Name=eth0
EOF
cat > /etc/systemd/network/10-pci-0801.link <<'EOF'
[Match]
Path=pci-0000:08:00.1-*

[Link]
Name=eth1
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
EOF

systemctl enable network


## bootloader options for onMetal
cat >> /etc/defaults/grub <<'EOF'
GRUB_TERMINAL_OUTPUT=serial
GRUB_SERIAL_COMMAND="serial --speed=57600 --unit=0 --word=8 --parity=no --stop=1"
GRUB_DISABLE_LINUX_UUID="true"
GRUB_DEVICE_LABEL="root"
EOF
grub2-mkconfig -o /boot/grub2/grub.cfg

echo "Installing custom cloud-init..."
# custom cloud-init rpm
wget http://KICK_HOST/cloud-init/cloud-init-0.7.7-el7.fc22.noarch.rpm
rpm -Uvh --nodeps cloud*.rpm
systemctl enable cloud-init-local
systemctl enable cloud-init
systemctl enable cloud-config
systemctl enable cloud-final

# temporary yum to dnf workaround
sed -i 's%cmd.append("-t")%#cmd.append("-t")%' /usr/lib/python2.7/site-packages/cloudinit/distros/rhel.py
sed -i 's%cmd.append("-t")%#cmd.append("-t")%' /usr/lib/python3.4/site-packages/cloudinit/distros/rhel.py

# delay cloud-init startup to allow network interfaces to start
mkdir -p /etc/systemd/system/cloud-init-local.service.d
cat > /etc/systemd/system/cloud-init-local.service.d/delaystart.conf <<'EOF'
[Service]
ExecStartPre=/usr/bin/sleep 20
EOF

# our cloud-init config
cat > /etc/cloud/cloud.cfg.d/10_rackspace.cfg <<'EOF'
datasource_list: [ ConfigDrive, None ]
disable_root: False
ssh_pwauth: False
ssh_deletekeys: False
resize_rootfs: noblock
manage_etc_hosts: localhost
growpart:
  mode: auto
  devices: ['/']
system_info:
  distro: fedora
  default_user:
    name: root
    lock_passwd: True

cloud_config_modules:
 - disk_setup
 - ssh-import-id
 - locale
 - set-passwords
 - package-update-upgrade-install
 - yum-add-repo
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu

cloud_init_modules:
 - migrator
 - bootcmd
 - write-files
 - growpart
 - resizefs
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - rsyslog
 - users-groups
 - ssh
EOF

# Cloud init logging config fix for verbose
sed -i 's/ - \[ \*log_base, \*log_syslog ]/# - \[ \*log_base, \*log_syslog ]/g' /etc/cloud/cloud.cfg.d/05_logging.cfg
sed -i 's/WARNING/DEBUG/g' /etc/cloud/cloud.cfg.d/05_logging.cfg

# set some stuff
#echo 'net.ipv4.conf.eth0.arp_notify = 1' >> /etc/sysctl.conf
#echo 'vm.swappiness = 0' >> /etc/sysctl.conf

cat >> /etc/sysctl.conf <<'EOF'
net.ipv4.tcp_rmem = 4096 87380 33554432
net.ipv4.tcp_wmem = 4096 65536 33554432
net.core.rmem_max = 33554432
net.core.wmem_max = 33554432
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_sack = 1
vm.dirty_ratio=5
EOF

# our fstab is much nicer these days
cat > /etc/fstab <<'EOF'
LABEL=root / ext4 errors=remount-ro,noatime 0 1
EOF

# set rackspace mirrors
sed -i '/^metalink/s/^/#/' /etc/yum.repos.d/fedora*.repo
sed -i '/^#baseurl/s/^#//' /etc/yum.repos.d/fedora*.repo
sed -i 's%download.fedoraproject.org/pub/fedora/linux%mirror.rackspace.com/fedora%g' /etc/yum.repos.d/fedora*.repo

systemctl enable rc-local.service
systemctl disable NetworkManager.service
systemctl mask NetworkManager.service

# disable acpi soft-off
systemctl disable acpid.service

# teeth specific modules
cat > /etc/modules-load.d/bonding.conf <<'EOF'
bonding
8021q
EOF

echo 'add_dracutmodules+="mdraid"' >> /etc/dracut.conf
dracut --regenerate-all --force


# Put a versionlock in place for cloud-init
mkdir -p /var/lib/cloud/scripts/per-instance
cat > /var/lib/cloud/scripts/per-instance/cloudinit-versionlock.sh <<'EOF'
#!/bin/sh
# cloud-init is customized for OnMetal servers
dnf versionlock add cloud-init
EOF
chmod a+x /var/lib/cloud/scripts/per-instance/cloudinit-versionlock.sh


# log packages
wget http://KICK_HOST/kickstarts/package_postback.sh
bash package_postback.sh Fedora_25_Teeth
rm -rf /root/tmp
echo "done"

# clean up
rm -f /etc/sysconfig/network-scripts/ifcfg-ens3
passwd -d root
passwd -l root
yum clean all
truncate -c -s0 /etc/machine-id
truncate -s0 /etc/resolv.conf
rm -f /etc/ssh/ssh_host_*
rm -f /root/.bash_history
rm -f /root/.nano_history
rm -f /root/.lesshst
rm -f /root/.ssh/known_hosts
rm -rf /tmp/tmp
find /var/log ! -name README -type f -exec truncate -s0 {} \;
find /tmp -type f -delete
find /root -type f ! -iname ".*" -delete
) 2>&1 | /usr/bin/tee /var/log/post_install_chvt.log
chvt 1
%end
